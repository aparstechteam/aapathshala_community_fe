import React from 'react';
import { useGoogleLogin } from '@react-oauth/google';

interface GoogleSignInButtonProps {
  onSuccess: (r: { access_token: string; }) => void;
  onError: () => void;
}

const GoogleSignInButton: React.FC<GoogleSignInButtonProps> = ({ onSuccess, onError }) => {

  const login = useGoogleLogin({
    onSuccess,
    onError
  });

  return (
    <button type='button'
      onClick={() => login()}
      className="flex items-center justify-center bg-green-600 text-white px-4 py-2 rounded-full cursor-pointer hover:bg-green-700 transition duration-200"
    >
      {/* <FaGoogle className="mr-2" /> */}
      <svg xmlns="http://www.w3.org/2000/svg" className='h-6 w-6 mr-2' preserveAspectRatio="xMidYMid" viewBox="0 0 256 262" id="google">
        <path fill="#4285F4" d="M255.878 133.451c0-10.734-.871-18.567-2.756-26.69H130.55v48.448h71.947c-1.45 12.04-9.283 30.172-26.69 42.356l-.244 1.622 38.755 30.023 2.685.268c24.659-22.774 38.875-56.282 38.875-96.027"></path>
        <path fill="#34A853" d="M130.55 261.1c35.248 0 64.839-11.605 86.453-31.622l-41.196-31.913c-11.024 7.688-25.82 13.055-45.257 13.055-34.523 0-63.824-22.773-74.269-54.25l-1.531.13-40.298 31.187-.527 1.465C35.393 231.798 79.49 261.1 130.55 261.1"></path>
        <path fill="#FBBC05" d="M56.281 156.37c-2.756-8.123-4.351-16.827-4.351-25.82 0-8.994 1.595-17.697 4.206-25.82l-.073-1.73L15.26 71.312l-1.335.635C5.077 89.644 0 109.517 0 130.55s5.077 40.905 13.925 58.602l42.356-32.782"></path>
        <path fill="#EB4335" d="M130.55 50.479c24.514 0 41.05 10.589 50.479 19.438l36.844-35.974C195.245 12.91 165.798 0 130.55 0 79.49 0 35.393 29.301 13.925 71.947l42.211 32.783c10.59-31.477 39.891-54.251 74.414-54.251"></path>
      </svg>
      <span className='pt-1'>
        Sign in with Google
      </span>
    </button>
  );
};
export default GoogleSignInButton



    {/* {status === 'success' ? (
              <div className="space-y-4 w-full hidden !text-black">
                <h3 className="text-lg font-semibold text-center">Currently Available For</h3>
                <ScrollArea className='h-[74vh] p-2 border rounded-lg'>
                  <div className="p-4 rounded-md">

                    <Table className="w-full border-collapse table-auto">
                      <TableHeader>
                        <TableRow className="bg-gray-100">
                          <TableHead className="p-4 text-left">Name</TableHead>
                          <TableHead className="p-4 text-left">HSC Batch</TableHead>
                          <TableHead className="p-4 text-left">Cycle</TableHead>
                        </TableRow>
                      </TableHeader>
                      <TableBody>
                        {courses.map((course) => (
                          <TableRow key={course.name + course.cycle}>
                            <TableCell className="p-4 font-medium">{course.name}</TableCell>
                            <TableCell className="p-4">{course.hsc_batch}</TableCell>
                            <TableCell className="p-4">{course.cycle}</TableCell>
                          </TableRow>
                        ))}
                      </TableBody>
                    </Table>

                    <ScrollBar orientation='vertical' />
                  </div>
                </ScrollArea>
              </div>
            ) : status === 'error' ? (
              <p className="text-red-500">Error loading courses. Please try again.</p>
            ) : (
              <AppLoader />
            )} */}


              // useEffect(() => {
  //   const fetchCourses = async () => {
  //     try {
  //       const response = await axios.get(`/api/courses`);
  //       const data = await response.data.data;
  //       setCourses(data);
  //       setStatus('success');
  //     } catch (error) {
  //       console.error('Error fetching courses:', error);
  //       setStatus('error');
  //     }
  //   };

  //   fetchCourses();
  //   // eslint-disable-next-line react-hooks/exhaustive-deps
  // }, []);