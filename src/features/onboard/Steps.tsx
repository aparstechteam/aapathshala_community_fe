import { Rocket } from '@/components'
import { cn } from '@/lib/utils'
import React from 'react'


export type Data = {
    name: string
    icon?: string
    id: number | string
}
type Props = {
    datas: Data[]
    data: number
    setData: (data: number | string) => void
    ques: string
    icon?: React.ReactNode
    error?: string
    col?: number
}

type TProps = {
    datas: Data[]
    data: (string | number)[]
    setData: (data: (string | number)) => void
    ques: string
    icon?: React.ReactNode
    error?: string
}

export const Steps = (props: Props) => {
    const { datas, data, setData, ques, icon, error, col } = props
    return (
        <div className='grid items-start justify-center min-h-[500px] p-4'>
            <div className='flex gap-4 items-center justify-center relative text-black dark:text-white'>
                <h2><Rocket /></h2>
                <div className='sm:w-[328px] bg-zemer p-4 rounded-lg'>
                    <h2>{ques}</h2>
                </div>
            </div>
            <div className={cn('grid items-center justify-center sm:justify-between gap-5 py-4', col === 1 ? `grid-cols-1` : `grid-cols-1 sm:grid-cols-2`)}>
                {datas.map((item, index) => (
                    <button key={index} onClick={() => setData(item.id)} className={cn(
                        'flex items-center justify-start gap-2 rounded-lg py-2 px-4 ring-2 duration-300 col-span-1',
                        error && !data ? "ring-red-500 shadow-red-500 shadow-none" :
                            data === item.id ? "ring-olive shadow-life shadow-none" : "ring-ash shadow-ash shadow-none"
                    )}>
                        {!!icon ||
                            <>
                                {/* eslint-disable-next-line @next/next/no-img-element */}
                                < img src={item.icon} alt={item.name} width={24} height={24} />
                            </>
                        }
                        {item.name}
                    </button>
                ))}
            </div>
        </div>
    )
}

export const Step2 = (props: TProps) => {
    const { datas, data, setData, ques, error } = props
    return (
        <div className='grid items-start justify-center min-h-[500px] p-4'>
            <div className='flex gap-4 items-center justify-center relative text-black dark:text-white'>
                <h2><Rocket /></h2>
                <div className='sm:w-[328px] bg-zemer p-4 rounded-lg'>
                    <h2>{ques}</h2>
                </div>
            </div>
            <div className='grid grid-cols-1 sm:grid-cols-2 items-center justify-between gap-5 py-4'>
                {datas.map((item, index) => (
                    <button key={index} onClick={() => { setData(item.id) }} className={cn(
                        'flex items-center col-span-1 justify-start gap-2 rounded-lg py-2 px-4 ring-2 duration-300',
                        !error ? (data.includes(item.id) ? "ring-olive shadow-life shadow-none" :
                            "ring-ash shadow-elegant/50 shadow-none") :
                            data.length === 0 && "ring-red-500 shadow-red-500 shadow-none"
                    )}>
                        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <g clip-path="url(#clip0_1932_41685)">
                                <path d="M17.4545 0H6.54545C2.9305 0 0 2.9305 0 6.54545V17.4545C0 21.0695 2.9305 24 6.54545 24H17.4545C21.0695 24 24 21.0695 24 17.4545V6.54545C24 2.9305 21.0695 0 17.4545 0Z" fill="#EAF7FF" />
                                <path d="M5.90854 16.3696H5.52295C5.52384 16.8798 5.72704 17.3689 6.08799 17.7295C6.44893 18.0901 6.93817 18.2929 7.4484 18.2933V17.9086C7.4484 17.8064 7.48898 17.7085 7.56122 17.6362C7.63345 17.564 7.73142 17.5234 7.83358 17.5234C7.93573 17.5234 8.0337 17.564 8.10594 17.6362C8.17817 17.7085 8.21875 17.8064 8.21875 17.9086V18.2933H8.98826V17.9086C8.98826 17.8064 9.02884 17.7085 9.10108 17.6362C9.17331 17.564 9.27128 17.5234 9.37344 17.5234C9.47559 17.5234 9.57356 17.564 9.6458 17.6362C9.71803 17.7085 9.75861 17.8064 9.75861 17.9086V18.2933H10.529V17.9086C10.529 17.8065 10.5695 17.7087 10.6417 17.6365C10.7138 17.5644 10.8117 17.5238 10.9137 17.5238C11.0158 17.5238 11.1136 17.5644 11.1858 17.6365C11.2579 17.7087 11.2985 17.8065 11.2985 17.9086V18.2933H12.0688V17.9086C12.0688 17.8064 12.1094 17.7085 12.1816 17.6362C12.2539 17.564 12.3518 17.5234 12.454 17.5234C12.5562 17.5234 12.6541 17.564 12.7264 17.6362C12.7986 17.7085 12.8392 17.8064 12.8392 17.9086V18.2933H13.6087V17.9086C13.6087 17.858 13.6186 17.8079 13.638 17.7612C13.6574 17.7144 13.6857 17.672 13.7215 17.6362C13.7573 17.6005 13.7997 17.5721 13.8465 17.5527C13.8932 17.5334 13.9433 17.5234 13.9939 17.5234C14.0444 17.5234 14.0945 17.5334 14.1413 17.5527C14.188 17.5721 14.2305 17.6005 14.2662 17.6362C14.302 17.672 14.3304 17.7144 14.3497 17.7612C14.3691 17.8079 14.379 17.858 14.379 17.9086V18.2933H15.1494V17.9086C15.1494 17.8065 15.1899 17.7087 15.2621 17.6365C15.3342 17.5644 15.4321 17.5238 15.5341 17.5238C15.6362 17.5238 15.734 17.5644 15.8062 17.6365C15.8784 17.7087 15.9189 17.8065 15.9189 17.9086V18.2933H16.37C17.4025 18.2933 17.9132 17.0475 17.1874 16.3217L7.49545 6.63056C6.76794 5.90305 5.52295 6.41718 5.52295 7.44711V7.89823H5.90854C6.0107 7.89823 6.10867 7.93881 6.1809 8.01105C6.25314 8.08328 6.29372 8.18125 6.29372 8.28341C6.29372 8.38556 6.25314 8.48353 6.1809 8.55577C6.10867 8.628 6.0107 8.66858 5.90854 8.66858H5.52295V9.43809H5.90854C6.0107 9.43809 6.10867 9.47867 6.1809 9.55091C6.25314 9.62314 6.29372 9.72111 6.29372 9.82327C6.29372 9.92542 6.25314 10.0234 6.1809 10.0956C6.10867 10.1679 6.0107 10.2084 5.90854 10.2084H5.52295V10.9788H5.90854C6.01059 10.9788 6.10845 11.0193 6.18061 11.0915C6.25276 11.1636 6.2933 11.2615 6.2933 11.3635C6.2933 11.4656 6.25276 11.5635 6.18061 11.6356C6.10845 11.7078 6.01059 11.7483 5.90854 11.7483H5.52295V12.5187H5.90854C6.0107 12.5187 6.10867 12.5592 6.1809 12.6315C6.25314 12.7037 6.29372 12.8017 6.29372 12.9038C6.29372 13.006 6.25314 13.104 6.1809 13.1762C6.10867 13.2484 6.0107 13.289 5.90854 13.289H5.52295V14.0585H5.90854C6.0107 14.0585 6.10867 14.0991 6.1809 14.1713C6.25314 14.2436 6.29372 14.3415 6.29372 14.4437C6.29372 14.5458 6.25314 14.6438 6.1809 14.716C6.10867 14.7883 6.0107 14.8289 5.90854 14.8289H5.52295V15.5992H5.90854C6.01059 15.5992 6.10845 15.6397 6.18061 15.7119C6.25276 15.7841 6.2933 15.8819 6.2933 15.984C6.2933 16.086 6.25276 16.1839 6.18061 16.256C6.10845 16.3282 6.01059 16.3696 5.90854 16.3696ZM8.21875 11.4434C8.21928 11.4056 8.23084 11.3689 8.252 11.3377C8.27316 11.3064 8.303 11.2821 8.33783 11.2676C8.37267 11.2531 8.41098 11.2492 8.44804 11.2562C8.4851 11.2633 8.51929 11.281 8.54638 11.3073L12.5099 15.2707C12.5361 15.2978 12.5538 15.332 12.5609 15.3691C12.5679 15.4061 12.564 15.4445 12.5495 15.4793C12.535 15.5141 12.5107 15.544 12.4795 15.5651C12.4482 15.5863 12.4115 15.5978 12.3738 15.5984H8.60351C8.50161 15.5984 8.40387 15.558 8.33174 15.486C8.25961 15.414 8.21898 15.3164 8.21875 15.2145V11.4434ZM12.8845 5.86021C12.6678 5.64393 12.3742 5.52246 12.068 5.52246C11.7618 5.52246 11.4681 5.64393 11.2514 5.86021L10.8003 6.31133C10.5838 6.52808 10.4621 6.82192 10.4621 7.1283C10.4621 7.43468 10.5838 7.72853 10.8003 7.94528L16.1911 13.3352C16.4061 13.5503 16.7035 13.6738 17.0076 13.6738H18.0359C18.1891 13.6735 18.336 13.6126 18.4443 13.5042C18.5527 13.3959 18.6136 13.249 18.6139 13.0958V12.0684C18.6139 11.7601 18.4937 11.4694 18.2753 11.2518L12.8845 5.86021ZM12.0688 8.12421L11.3464 7.40091C11.3105 7.36516 11.282 7.32268 11.2626 7.2759C11.2431 7.22912 11.2331 7.17896 11.2331 7.1283C11.2331 7.07765 11.2431 7.02749 11.2626 6.98071C11.282 6.93393 11.3105 6.89145 11.3464 6.8557L11.7966 6.40458C11.8324 6.36881 11.8748 6.34044 11.9215 6.32108C11.9682 6.30173 12.0183 6.29176 12.0688 6.29176C12.1194 6.29176 12.1694 6.30173 12.2161 6.32108C12.2628 6.34044 12.3053 6.36881 12.341 6.40458L13.0643 7.12788L12.0688 8.12421Z" fill="#0992E2" />
                            </g>
                            <defs>
                                <clipPath id="clip0_1932_41685">
                                    <rect width="24" height="24" fill="white" />
                                </clipPath>
                            </defs>
                        </svg>
                        {item.name}
                    </button>
                ))}
            </div>
        </div>
    )
}
